{"version":3,"sources":["container/Layout.js","components/Article.js","components/form.js","container/ArticleListView.js","container/ArticleDetailView.js","components/test.js","baseroutes.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Content","Footer","CustomLayout","props","className","theme","mode","defaultSelectedKeys","Item","key","style","padding","margin","to","children","textAlign","IconText","icon","text","React","createElement","Article","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","title","actions","StarOutlined","LikeOutlined","MessageOutlined","extra","width","alt","src","Meta","avatar","href","id","description","content","axios","defaults","xsrfHeaderName","xsrfCookieName","ArticleForm","state","titleHandler","event","setState","target","value","contentHandler","submitHandler","action","articleID","preventDefault","newArticle","method","url","headers","then","res","catch","e","onSubmit","placeholder","this","type","htmlType","btn","Component","ArticleListView","articles","get","response","article","deleteHandler","match","params","delete","test","BaseRouter","exact","path","component","ArticleList","ArticleDetailView","Test","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3a589f0d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction CustomLayout(props) {\r\n    return (\r\n        <Layout className=\"layout\">\r\n            <Header>\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n                    <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n                    <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n            <Content style={{ padding: '0 50px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item><Link to={'/'}>Home</Link></Breadcrumb.Item>\r\n                    <Breadcrumb.Item><Link to={'/'}  > List</Link></Breadcrumb.Item>\r\n\r\n                </Breadcrumb>\r\n                <div className=\"site-layout-content\">\r\n                    {props.children}\r\n                </div>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CustomLayout\r\n","import React from 'react'\r\n\r\nimport { List, Avatar, Space } from 'antd';\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst IconText = ({ icon, text }) => (\r\n    <Space>\r\n        {React.createElement(icon)}\r\n        {text}\r\n    </Space>\r\n);\r\n\r\nfunction Article(props) {\r\n    return (\r\n        <List\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            pagination={{\r\n                onChange: page => {\r\n                    console.log(page);\r\n                },\r\n                pageSize: 3,\r\n            }}\r\n            dataSource={props.data}\r\n\r\n            renderItem={item => (\r\n                <List.Item\r\n                    key={item.title}\r\n                    actions={[\r\n                        <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\r\n                        <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\r\n                        <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\r\n                    ]}\r\n                    extra={\r\n                        <img\r\n                            width={272}\r\n                            alt=\"logo\"\r\n                            src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                        />\r\n                    }\r\n                >\r\n                    <List.Item.Meta\r\n                        avatar={<Avatar src={item.avatar} />}\r\n                        title={<a href={`/${item.id}`}>{item.title}</a>}\r\n                        description={item.description}\r\n                    />\r\n                    {item.content}\r\n                </List.Item>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Article\r\n","import React, { Component } from 'react'\r\n\r\nimport axios from 'axios'\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\"\r\naxios.defaults.xsrfCookieName = \"csrftoken\"\r\n\r\nexport default class ArticleForm extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    titleHandler = (event) => {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    contentHandler = (event) => {\r\n        this.setState({\r\n            content: event.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (event, action, articleID) => {\r\n        //add these info as new article to the database\r\n        event.preventDefault()\r\n\r\n        const newArticle = {\r\n            title: this.state.title,\r\n            content: this.state.content\r\n        }\r\n        console.log(newArticle)\r\n        // axios.post('http://127.0.0.1:8000/api/', {\r\n        //     title: this.state.title,\r\n        //     content: this.state.content\r\n        // })\r\n        switch (action) {\r\n            case \"post\":\r\n                axios({\r\n                    method: \"post\",\r\n                    url: \"http://127.0.0.1:8000/api/\",\r\n                    data: newArticle,\r\n                    headers: { \"Content-Type\": \"application/json\" }\r\n                })\r\n                    .then(res => console.log(res))\r\n                    .catch(e => console.log(e))\r\n                this.setState({\r\n                    title: '',\r\n                    content: ''\r\n                })\r\n                break\r\n            case \"put\":\r\n                axios({\r\n                    method: \"put\",\r\n                    url: `http://127.0.0.1:8000/api/${articleID}/`,\r\n                    data: newArticle,\r\n                    headers: { \"Content-Type\": \"application/json\" }\r\n                })\r\n                    .then(res => console.log(res))\r\n                    .catch(e => console.log(e))\r\n                this.setState({\r\n                    title: '',\r\n                    content: ''\r\n                })\r\n                break\r\n            default:\r\n                console.log(\"dd\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={(event) => this.submitHandler(event, this.props.action, this.props.articleID)}>\r\n                    <label>title</label>\r\n                    <input placeholder=\"Title\" value={this.state.title} onChange={this.titleHandler} />\r\n\r\n                    <label>Content</label>\r\n                    <input placeholder=\"Title\" value={this.state.content} onChange={this.contentHandler} />\r\n\r\n                    <button type=\"submit\" htmlType=\"submit\">{this.props.btn}</button>\r\n                    <br />\r\n                    <br />\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Article from '../components/Article'\r\nimport ArticleForm from '../components/form'\r\n// const listData = [];\r\n// for (let i = 0; i < 23; i++) {\r\n//     listData.push({\r\n//         href: 'https://ant.design',\r\n//         title: `ant design part ${i}`,\r\n//         avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n//         description:\r\n//             'Ant Design, a design language for background applications, is refined by Ant UED Team.',\r\n//         content:\r\n//             'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\r\n//     });\r\n// }\r\n\r\n\r\nexport default class ArticleListView extends Component {\r\n\r\n    state = {\r\n        articles: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://127.0.0.1:8000/api/')\r\n            .then(response => {\r\n                this.setState({\r\n                    articles: response.data\r\n                })\r\n                console.log(response.data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Article data={this.state.articles} />\r\n                <ArticleForm btn=\"Add new\" action=\"post\" articleID={null} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport ArticleForm from '../components/form'\r\nimport { Card } from 'antd'\r\n\r\nexport default class ArticleListView extends Component {\r\n\r\n    state = {\r\n        article: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const articleID = this.props.match.params.articleID\r\n        axios.get(`http://127.0.0.1:8000/api/${articleID}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    article: response.data\r\n                })\r\n                console.log(response.data)\r\n            })\r\n    }\r\n\r\n    deleteHandler = (event) => {\r\n        const articleID = this.props.match.params.articleID\r\n        axios.delete(`http://127.0.0.1:8000/api/${articleID}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    article: response.data\r\n                })\r\n                console.log(response.data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const articleID = this.props.match.params.articleID\r\n        return (\r\n            <div>\r\n                <Card title={this.state.article.title}>\r\n                    <p>{this.state.article.content}</p>\r\n                </Card>\r\n                <ArticleForm\r\n                    articleID={articleID}\r\n                    btn=\"Update\"\r\n                    action=\"put\"\r\n                />\r\n                <form onSubmit={this.deleteHandler}>\r\n                    <button>delete</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nfunction test() {\r\n    return (\r\n        <div>\r\n            <h1>test</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default test\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport ArticleList from './container/ArticleListView'\r\nimport ArticleDetailView from './container/ArticleDetailView'\r\nimport Test from './components/test'\r\nfunction BaseRouter() {\r\n    return (\r\n        <div>\r\n            <Route exact path='/' component={ArticleList} />\r\n            <Route exact path='/:articleID' component={ArticleDetailView} />\r\n            <Route exact path='/test' component={Test} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseRouter\r\n","import React from 'react';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport CustomLayout from './container/Layout'\n// import ArticleListView from './container/ArticleListView'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport BaseRouter from './baseroutes'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <CustomLayout >\n\n          <BaseRouter />\n        </CustomLayout>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}